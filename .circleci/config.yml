version: 2.1

orbs:
  vro: kohirens/version-release@0.7.3

parameters:
  ssh-finger:
    description: SSH fingerprint.
    type: string
    default: "4f:88:2a:81:b5:1c:47:5e:68:24:ae:d3:3a:54:95:06"

jobs:
  co:
    working_directory: ~/repo
    docker:
      - image: circleci/golang:1.17
    steps:
      - checkout
      - restore_cache:
          keys:
            - go-mod-v1-{{ checksum "go.mod" }}
      - run:
          name: Install Dependencies
          command: go mod tidy
      - save_cache:
          key: go-mod-v1-{{ checksum "go.mod" }}
          paths:
            - "/go/pkg/mod"
      - persist_to_workspace:
          root: .
          paths: [ ./* ]

  run-test:
    docker:
      - image: circleci/golang:1.17
    steps:
      - attach_workspace:
          at: .
      - run:
          name: "Unit test"
          command: |
            go test -v

workflows:
  pull-request:
    jobs:
      - co
      - run-test:
          requires: [ co ]
  # Only run when branch is main
  # 1. Update the changelog.
  # 2. Merge the changelog to main, causing tag-and-release to run.
  # 3. Verify there are taggable changes.
  # 4. Publish a release tag.
  auto-release:
    jobs:
      - vro/update-and-merge-changelog: # publish the changelog
          context: orb-publishing
          filters:
            branches:
              only: main
          pre-steps: [ checkout, attach_workspace: { at: '.' } ]
          sshFinger: << pipeline.parameters.ssh-finger >>
      - vro/tag-and-release: # publish a new tag and release it on GitHub
          requires: [ vro/update-and-merge-changelog ]
          context: orb-publishing
          pre-steps: [ checkout, attach_workspace: { at: '.' } ]
